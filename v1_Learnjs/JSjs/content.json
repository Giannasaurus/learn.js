[
    {
        "title": "Basics",
        "subtopics": [
            {
                "title": "Overview",
                "body": "üåü Module Overview\n\nWelcome to the wonderful world of JavaScript! This lesson module will take you on an adventure through JavaScript's core concepts with a fun, engaging approach. By the end of this module, you'll understand what makes JavaScript tick and be ready to start coding your own interactive web experiences.\n\nüß© What is JavaScript?\n\nJavaScript is the playful spirit of the web! While HTML provides structure and CSS handles style, JavaScript brings websites to life with:\n\n‚Ä£ Interactivity: Respond to user clicks, typing, and other actions\n‚Ä£ Dynamic content: Change webpage content on the fly\n‚Ä£ Animated effects: Create movement and visual flair\n‚Ä£ Data processing: Handle information without reloading the page\n\nüé≠ Fun Fact: The 10-Day Creation\n\nJavaScript was famously created in just 10 days in May 1995 by Brendan Eich while he was working at Netscape. Originally named \"Mocha,\" then briefly \"LiveScript,\" it was finally renamed \"JavaScript\" as a marketing move to capitalize on the popularity of Java (though the two languages are quite different!).\n\nüåà JavaScript Fun Facts\n\nJavaScript has nothing to do with Java! The similar name was purely for marketing purposes.\nDespite being created in just 10 days, JavaScript has become one of the most popular programming languages in the world.\nThe official name of JavaScript is actually ECMAScript (ES).\nJavaScript can run not just in browsers, but also on servers, in databases, and even on IoT devices.\nThe first JavaScript engine was created in 10 days, but modern JavaScript engines like V8 (used in Chrome and Node.js) are incredibly sophisticated and fast."
            },
            {
                "title": "Syntax",
                "body": "üß≠ Welcome to the Syntax Safari!\nHello intrepid code explorer! In this adventure, we'll journey through the wild and wonderful landscape of JavaScript syntax. Pack your coding compass as we navigate through the syntax jungle, discovering the rules that make JavaScript tick!\n\nüèïÔ∏è Base Camp: Syntax Fundamentals\n\nüî§ Case Sensitivity\n\nJavaScript is case-sensitive, which means variable, Variable, and VARIABLE are three completely different things!\nlet animal = \"tiger\";  // This is a tiger\nlet Animal = \"Lion\";   // This is a completely different Lion\nlet ANIMAL = \"BEAR\";   // And this is yet another BEAR\n\nconsole.log(animal);   // tiger\nconsole.log(Animal);   // Lion \nconsole.log(ANIMAL);   // BEAR\nüé™ Fun Fact: JavaScript's case sensitivity has caused countless hours of debugging! The most common case-related bug? Typing addeventlistener() instead of addEventListener()."
            },
            {
                "title": "Placement",
                "body": "You can write JavaScript in two places:"
            },
            {
                "title": "Variables",
                "body": "Variables are like labeled boxes that hold data. You can name them almost anything (except reserved words like class)."
            },
            {
                "title": "Operators",
                "body": "Operators do stuff with your data. Here are the essentials:"
            },
            {
                "title": "If-Else",
                "body": "If something is true, do this. Otherwise, do that."
            },
            {
                "title": "Switch Case",
                "body": "A cleaner way to compare one variable to many values:"
            }
        ]
    }
]